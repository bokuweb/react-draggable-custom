{"version":3,"sources":["../webpack/universalModuleDefinition","../webpack/bootstrap 395e2cbbbb92f873ce73","../index.js","../lib/Draggable.es6","../external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","../external {\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\",\"root\":\"ReactDOM\"}","../~/classnames/index.js","../lib/utils/domFns.es6","../lib/utils/shims.es6","../lib/utils/getPrefix.es6","../lib/utils/positionFns.es6","../lib/DraggableCore.es6","../lib/utils/log.es6"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__webpack_require__","moduleId","installedModules","id","loaded","modules","call","m","c","p","default","DraggableCore","_react","_reactDom","_classnames","_domFns","_positionFns","_shims","_DraggableCore","_log","Draggable","state","dragging","dragged","clientX","_this","props","start","x","clientY","y","slackX","slackY","isElementSVG","onDragStart","e","coreEvent","_log2","position","onStart","createUIEvent","setState","onDrag","uiEvent","newState","left","top","bounds","_getBoundPosition","getBoundPosition","_getBoundPosition2","_slicedToArray","deltaX","deltaY","onDragStop","onStop","_reactDom2","findDOMNode","SVGElement","next","_state","_getBoundPosition3","_getBoundPosition4","style","svgTransform","transformOpts","canDragX","canDragY","createSVGTransform","createCSSTransform","isNaN","zIndex","className","_classnames2","children","react-draggable-dragging","react-draggable-dragged","_react2","createElement","_DraggableCore2","_extends","cloneElement","Children","only","transform","Component","displayName","propTypes","axis","PropTypes","oneOf","oneOfType","shape","Number","right","bottom","string","number","defaultProps","NaN","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","apply","key","hasOwn","join","hasOwnProperty","undefined","matchesSelector","el","selector","matchesSelectorFunc","findInArray","method","isFunction","addEvent","event","handler","attachEvent","addEventListener","removeEvent","detachEvent","removeEventListener","outerHeight","node","height","clientHeight","computedStyle","window","getComputedStyle","int","borderTopWidth","borderBottomWidth","outerWidth","width","clientWidth","borderLeftWidth","borderRightWidth","innerHeight","paddingTop","paddingBottom","innerWidth","paddingLeft","paddingRight","_ref","_defineProperty","_getPrefix","browserPrefixToKey","_getPrefix2","_ref3","addUserSelectStyles","document","body","getAttribute","setAttribute","userSelectStyle","removeUserSelectStyles","replace","styleHacks","touchAction","createCoreEvent","draggable","_pendingState","isStart","isNum","lastX","lastY","userSelectPrefix","getPrefix","userSelect","browserPrefixToStyle","array","callback","func","Object","prototype","toString","num","a","parseInt","dontSetMe","propName","componentName","Error","prop","documentElement","prefixes","prefix","kebabToTitleCase","toLowerCase","str","out","shouldCapitalize","toUpperCase","cloneBounds","boundNode","parentNode","querySelector","nodeStyle","boundNodeStyle","offsetLeft","marginLeft","offsetTop","marginTop","Math","min","max","snapToGrid","grid","pendingX","pendingY","round","getControlPosition","targetTouches","changedTouches","eventsFor","touch","move","stop","mouse","dragEventFor","handleDragStart","onMouseDown","allowAnyClick","button","disabled","handle","target","cancel","touchIdentifier","identifier","enableUserSelectHack","_getControlPosition","scrollX","scrollLeft","scrollY","scrollTop","handleScroll","handleDrag","handleDragStop","_getControlPosition2","_snapToGrid","_snapToGrid2","_getControlPosition3","s","onMouseUp","onTouchStart","onTouchEnd","bool","arrayOf","log"],"mappings":"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","file":"dist/react-draggable.min.js","sourceRoot":"","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactDraggable\"] = factory(require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"ReactDraggable\"] = factory(root[\"React\"], root[\"ReactDOM\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 395e2cbbbb92f873ce73","module.exports = require('./lib/Draggable').default;\nmodule.exports.DraggableCore = require('./lib/DraggableCore').default;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// @flow\nimport {default as React, PropTypes} from 'react';\nimport ReactDOM from 'react-dom';\n// $FlowIgnore\nimport classNames from 'classnames';\nimport {createUIEvent, createCSSTransform, createSVGTransform} from './utils/domFns';\nimport {canDragX, canDragY, getBoundPosition} from './utils/positionFns';\nimport {dontSetMe} from './utils/shims';\nimport DraggableCore from './DraggableCore';\nimport log from './utils/log';\n\nimport type {CoreEvent} from './utils/domFns';\nexport type CoreEventHandler = (e: Event, coreEvent: CoreEvent) => void | false;\nexport type DraggableState = {\n  dragging: boolean,\n  dragged: boolean,\n  clientX: number, clientY: number,\n  slackX: number, slackY: number,\n  isElementSVG: boolean\n};\n\n//\n// Define <Draggable>\n//\n\nexport default class Draggable extends React.Component {\n\n  static displayName = 'Draggable';\n\n  static propTypes = {\n    // Accepts all props <DraggableCore> accepts.\n    ...DraggableCore.propTypes,\n\n    /**\n     * `axis` determines which axis the draggable can move.\n     *\n     *  Note that all callbacks will still return data as normal. This only\n     *  controls flushing to the DOM.\n     *\n     * 'both' allows movement horizontally and vertically.\n     * 'x' limits movement to horizontal axis.\n     * 'y' limits movement to vertical axis.\n     * 'none' limits all movement.\n     *\n     * Defaults to 'both'.\n     */\n    axis: PropTypes.oneOf(['both', 'x', 'y', 'none']),\n\n    /**\n     * `bounds` determines the range of movement available to the element.\n     * Available values are:\n     *\n     * 'parent' restricts movement within the Draggable's parent node.\n     *\n     * Alternatively, pass an object with the following properties, all of which are optional:\n     *\n     * {left: LEFT_BOUND, right: RIGHT_BOUND, bottom: BOTTOM_BOUND, top: TOP_BOUND}\n     *\n     * All values are in px.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable bounds={{right: 300, bottom: 300}}>\n     *              <div>Content</div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    bounds: PropTypes.oneOfType([\n      PropTypes.shape({\n        left: PropTypes.Number,\n        right: PropTypes.Number,\n        top: PropTypes.Number,\n        bottom: PropTypes.Number\n      }),\n      PropTypes.string,\n      PropTypes.oneOf([false])\n    ]),\n\n    /**\n     * `start` specifies the x and y that the dragged item should start at\n     *\n     * Example:\n     *\n     * ```jsx\n     *      let App = React.createClass({\n     *          render: function () {\n     *              return (\n     *                  <Draggable start={{x: 25, y: 25}}>\n     *                      <div>I start with transformX: 25px and transformY: 25px;</div>\n     *                  </Draggable>\n     *              );\n     *          }\n     *      });\n     * ```\n     */\n    start: PropTypes.shape({\n      x: PropTypes.number,\n      y: PropTypes.number\n    }),\n\n    /**\n     * `zIndex` specifies the zIndex to use while dragging.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return (\n     *               <Draggable zIndex={100}>\n     *                   <div>I have a zIndex</div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    zIndex: PropTypes.number,\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n\n  static defaultProps = {\n    ...DraggableCore.defaultProps,\n    axis: 'both',\n    bounds: false,\n    start: {x: 0, y: 0},\n    zIndex: NaN,\n    x: 0,\n    y: 0\n  };\n\n  state: DraggableState = {\n    // Whether or not we are currently dragging.\n    dragging: false,\n\n    // Whether or not we have been dragged before.\n    dragged: false,\n\n    // Current transform x and y.\n    clientX: this.props.start.x, clientY: this.props.start.y,\n\n    // Used for compensating for out-of-bounds drags\n    slackX: 0, slackY: 0,\n\n    // Can only determine if SVG after mounting\n    isElementSVG: false\n  };\n\n  componentDidMount() {\n    // Check to see if the element passed is an instanceof SVGElement\n    if(ReactDOM.findDOMNode(this) instanceof SVGElement) {\n      this.setState({ isElementSVG: true });\n    }\n  }\n\n  componentWillUnmount() {\n    this.setState({dragging: false}); // prevents invariant if unmounted while dragging\n  }\n\n  componentWillReceiveProps(next) {\n    let { clientX, clientY } = this.state;\n    if (next.x !== clientX　|| next.y !== clientY) {\n      [clientX, clientY] = getBoundPosition(this, next.x, next.y);\n      this.setState({ clientX, clientY });\n    }\n  }\n\n  onDragStart: CoreEventHandler = (e, coreEvent) => {\n    log('Draggable: onDragStart: %j', coreEvent.position);\n\n    // Short-circuit if user's callback killed it.\n    let shouldStart = this.props.onStart(e, createUIEvent(this, coreEvent));\n    // Kills start event on core as well, so move handlers are never bound.\n    if (shouldStart === false) return false;\n\n    this.setState({dragging: true, dragged: true});\n  };\n\n  onDrag: CoreEventHandler = (e, coreEvent) => {\n    if (!this.state.dragging) return false;\n    log('Draggable: onDrag: %j', coreEvent.position);\n\n    let uiEvent = createUIEvent(this, coreEvent);\n\n    let newState = {\n      clientX: uiEvent.position.left,\n      clientY: uiEvent.position.top\n    };\n\n    // Keep within bounds.\n    if (this.props.bounds) {\n      // Save original x and y.\n      let {clientX, clientY} = newState;\n\n      // Add slack to the values used to calculate bound position. This will ensure that if\n      // we start removing slack, the element won't react to it right away until it's been\n      // completely removed.\n      newState.clientX += this.state.slackX;\n      newState.clientY += this.state.slackY;\n\n      // Get bound position. This will ceil/floor the x and y within the boundaries.\n      [newState.clientX, newState.clientY] = getBoundPosition(this, newState.clientX, newState.clientY);\n\n      // Recalculate slack by noting how much was shaved by the boundPosition handler.\n      newState.slackX = this.state.slackX + (clientX - newState.clientX);\n      newState.slackY = this.state.slackY + (clientY - newState.clientY);\n\n      // Update the event we fire to reflect what really happened after bounds took effect.\n      uiEvent.position.left = clientX;\n      uiEvent.position.top = clientY;\n      uiEvent.deltaX = newState.clientX - this.state.clientX;\n      uiEvent.deltaY = newState.clientY - this.state.clientY;\n    }\n\n    // Short-circuit if user's callback killed it.\n    let shouldUpdate = this.props.onDrag(e, uiEvent);\n    if (shouldUpdate === false) return false;\n\n    this.setState(newState);\n  };\n\n  onDragStop: CoreEventHandler = (e, coreEvent) => {\n    if (!this.state.dragging) return false;\n\n    // Short-circuit if user's callback killed it.\n    let shouldStop = this.props.onStop(e, createUIEvent(this, coreEvent));\n    if (shouldStop === false) return false;\n\n    log('Draggable: onDragStop: %j', coreEvent.position);\n\n    this.setState({\n      dragging: false,\n      slackX: 0,\n      slackY: 0\n    });\n  };\n\n  render(): React.Element {\n    let style = {}, svgTransform = null;\n\n    // Add a CSS transform to move the element around. This allows us to move the element around\n    // without worrying about whether or not it is relatively or absolutely positioned.\n    // If the item you are dragging already has a transform set, wrap it in a <span> so <Draggable>\n    // has a clean slate.\n    const transformOpts = {\n      // Set left if horizontal drag is enabled\n      x: (canDragX(this) ?\n         this.state.clientX :\n         this.props.start.x),\n \n      // Set top if vertical drag is enabled\n      y: (canDragY(this) ?\n         this.state.clientY :\n         this.props.start.y)\n    };\n\n    // If this element was SVG, we use the `transform` attribute.\n    if (this.state.isElementSVG) {\n      svgTransform = createSVGTransform(transformOpts);\n    } else {\n      style = createCSSTransform(transformOpts);\n    }\n\n    // zIndex option\n    if (this.state.dragging && !isNaN(this.props.zIndex)) {\n      style.zIndex = this.props.zIndex;\n    }\n\n    // Mark with class while dragging\n    let className = classNames((this.props.children.props.className || ''), 'react-draggable', {\n      'react-draggable-dragging': this.state.dragging,\n      'react-draggable-dragged': this.state.dragged\n    });\n\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return (\n      <DraggableCore {...this.props} onStart={this.onDragStart} onDrag={this.onDrag} onStop={this.onDragStop}>\n        {React.cloneElement(React.Children.only(this.props.children), {\n          className: className,\n          style: {...this.props.children.props.style, ...style},\n          transform: svgTransform\n        })}\n      </DraggableCore>\n    );\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./lib/Draggable.es6","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\",\"root\":\"ReactDOM\"}\n// module id = 3\n// module chunks = 0","/*!\n  Copyright (c) 2016 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tclasses.push(classNames.apply(null, arg));\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/classnames/index.js\n// module id = 4\n// module chunks = 0","// @flow\nimport {findInArray, isFunction, isNum, int} from './shims';\nimport browserPrefix, {getPrefix, browserPrefixToStyle, browserPrefixToKey} from './getPrefix';\nimport ReactDOM from 'react-dom';\n\nimport type Draggable from '../Draggable';\nimport type DraggableCore from '../DraggableCore';\n\nexport type CoreEvent = {\n  node: HTMLElement,\n  position: {\n    deltaX: number, deltaY: number,\n    lastX: number, lastY: number,\n    clientX: number, clientY: number\n  }\n};\n\nexport type UIEvent = {\n  node: HTMLElement,\n  position: {\n    left: number, top: number\n  },\n  deltaX: number, deltaY: number\n};\n\nlet matchesSelectorFunc = '';\nexport function matchesSelector(el: HTMLElement, selector: string): boolean {\n  if (!matchesSelectorFunc) {\n    matchesSelectorFunc = findInArray([\n      'matches',\n      'webkitMatchesSelector',\n      'mozMatchesSelector',\n      'msMatchesSelector',\n      'oMatchesSelector'\n    ], function(method){\n      // $FlowIgnore: Doesn't think elements are indexable\n      return isFunction(el[method]);\n    });\n  }\n\n  // $FlowIgnore: Doesn't think elements are indexable\n  return el[matchesSelectorFunc].call(el, selector);\n}\n\nexport function addEvent(el: ?Node, event: string, handler: Function): void {\n  if (!el) { return; }\n  if (el.attachEvent) {\n    el.attachEvent('on' + event, handler);\n  } else if (el.addEventListener) {\n    el.addEventListener(event, handler, true);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = handler;\n  }\n}\n\nexport function removeEvent(el: ?Node, event: string, handler: Function): void {\n  if (!el) { return; }\n  if (el.detachEvent) {\n    el.detachEvent('on' + event, handler);\n  } else if (el.removeEventListener) {\n    el.removeEventListener(event, handler, true);\n  } else {\n    // $FlowIgnore: Doesn't think elements are indexable\n    el['on' + event] = null;\n  }\n}\n\nexport function outerHeight(node: HTMLElement): number {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetTop which is including margin. See getBoundPosition\n  let height = node.clientHeight;\n  let computedStyle = window.getComputedStyle(node);\n  height += int(computedStyle.borderTopWidth);\n  height += int(computedStyle.borderBottomWidth);\n  return height;\n}\n\nexport function outerWidth(node: HTMLElement): number {\n  // This is deliberately excluding margin for our calculations, since we are using\n  // offsetLeft which is including margin. See getBoundPosition\n  let width = node.clientWidth;\n  let computedStyle = window.getComputedStyle(node);\n  width += int(computedStyle.borderLeftWidth);\n  width += int(computedStyle.borderRightWidth);\n  return width;\n}\nexport function innerHeight(node: HTMLElement): number {\n  let height = node.clientHeight;\n  let computedStyle = window.getComputedStyle(node);\n  height -= int(computedStyle.paddingTop);\n  height -= int(computedStyle.paddingBottom);\n  return height;\n}\n\nexport function innerWidth(node: HTMLElement): number {\n  let width = node.clientWidth;\n  let computedStyle = window.getComputedStyle(node);\n  width -= int(computedStyle.paddingLeft);\n  width -= int(computedStyle.paddingRight);\n  return width;\n}\n\nexport function createCSSTransform({x, y}: {x: number, y: number}): Object {\n  // Replace unitless items with px\n  return {[browserPrefixToKey('transform', browserPrefix)]: 'translate(' + x + 'px,' + y + 'px)'};\n}\n\nexport function createSVGTransform({x, y}: {x: number, y: number}): string {\n  return 'translate(' + x + ',' + y + ')';\n}\n\n// User-select Hacks:\n//\n// Useful for preventing blue highlights all over everything when dragging.\nconst userSelectPrefix = getPrefix('user-select');\nconst userSelect = browserPrefixToStyle('user-select', userSelectPrefix);\nconst userSelectStyle = `;${userSelect}: none;`;\n\nexport function addUserSelectStyles() {\n  let style = document.body.getAttribute('style') || '';\n  document.body.setAttribute('style', style + userSelectStyle);\n}\n\nexport function removeUserSelectStyles() {\n  let style = document.body.getAttribute('style') || '';\n  document.body.setAttribute('style', style.replace(userSelectStyle, ''));\n}\n\nexport function styleHacks(childStyle: Object = {}): Object {\n  // Workaround IE pointer events; see #51\n  // https://github.com/mzabriskie/react-draggable/issues/51#issuecomment-103488278\n  return {\n    touchAction: 'none',\n    ...childStyle\n  };\n}\n\n// Create an event exposed by <DraggableCore>\nexport function createCoreEvent(draggable: DraggableCore, clientX: number, clientY: number): CoreEvent {\n  // State changes are often (but not always!) async. We want the latest value.\n  let state = draggable._pendingState || draggable.state;\n  let isStart = !isNum(state.lastX);\n\n  return {\n    node: ReactDOM.findDOMNode(draggable),\n    position: isStart ?\n      // If this is our first move, use the clientX and clientY as last coords.\n      {\n        deltaX: 0, deltaY: 0,\n        lastX: clientX, lastY: clientY,\n        clientX: clientX, clientY: clientY\n      } :\n      // Otherwise calculate proper values.\n      {\n        deltaX: clientX - state.lastX, deltaY: clientY - state.lastY,\n        lastX: state.lastX, lastY: state.lastY,\n        clientX: clientX, clientY: clientY\n      }\n  };\n}\n\n// Create an event exposed by <Draggable>\nexport function createUIEvent(draggable: Draggable, coreEvent: CoreEvent): UIEvent {\n  return {\n    node: ReactDOM.findDOMNode(draggable),\n    position: {\n      left: draggable.state.clientX + coreEvent.position.deltaX,\n      top: draggable.state.clientY + coreEvent.position.deltaY\n    },\n    deltaX: coreEvent.position.deltaX,\n    deltaY: coreEvent.position.deltaY\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/domFns.es6","// @flow\n// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\nexport function findInArray(array: Array<any>, callback: Function): any {\n  for (let i = 0, length = array.length; i < length; i++) {\n    if (callback.apply(callback, [array[i], i, array])) return array[i];\n  }\n}\n\nexport function isFunction(func: any): boolean {\n  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n}\n\nexport function isNum(num: any): boolean {\n  return typeof num === 'number' && !isNaN(num);\n}\n\nexport function int(a: string): number {\n  return parseInt(a, 10);\n}\n\nexport function dontSetMe(props: Object, propName: string, componentName: string) {\n  if (props[propName]) {\n    throw new Error(`Invalid prop ${propName} passed to ${componentName} - do not set this, set it on the child.`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/shims.es6","// @flow\nconst prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nexport function getPrefix(prop: string='transform'): string {\n  // Checking specifically for 'window.document' is for pseudo-browser server-side\n  // environments that define 'window' as the global context.\n  // E.g. React-rails (see https://github.com/reactjs/react-rails/pull/84)\n  if (typeof window === 'undefined' || typeof window.document === 'undefined') return '';\n\n  const style = window.document.documentElement.style;\n\n  if (prop in style) return '';\n\n  for (let i = 0; i < prefixes.length; i++) {\n    if (browserPrefixToStyle(prop, prefixes[i]) in style) return prefixes[i];\n  }\n\n  return '';\n}\n\nexport function browserPrefixToKey(prop: string, prefix: string): string {\n  return prefix ? `${prefix}${kebabToTitleCase(prop)}` : prop;\n}\n\nexport function browserPrefixToStyle(prop: string, prefix: string): string {\n  return prefix ? `-${prefix.toLowerCase()}-${prop}` : prop;\n}\n\nfunction kebabToTitleCase(str: string): string {\n  let out = '';\n  let shouldCapitalize = true;\n  for (let i = 0; i < str.length; i++) {\n    if (shouldCapitalize) {\n      out += str[i].toUpperCase();\n      shouldCapitalize = false;\n    } else if (str[i] === '-') {\n      shouldCapitalize = true;\n    } else {\n      out += str[i];\n    }\n  }\n  return out;\n}\n\n// Default export is the prefix itself, like 'Moz', 'Webkit', etc\n// Note that you may have to re-test for certain things; for instance, Chrome 50\n// can handle unprefixed `transform`, but not unprefixed `user-select`\nexport default getPrefix();\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/getPrefix.es6","// @flow\nimport React from 'react';\nimport {isNum, int} from './shims';\nimport ReactDOM from 'react-dom';\nimport {innerWidth, innerHeight, outerWidth, outerHeight} from './domFns';\n\nimport type Draggable from '../Draggable';\nexport type ControlPosition = {\n  clientX: number, clientY: number\n};\nexport type Bounds = {\n  left: number, top: number, right: number, bottom: number\n};\n\nexport function getBoundPosition(draggable: Draggable, clientX: number, clientY: number): [number, number] {\n  // If no bounds, short-circuit and move on\n  if (!draggable.props.bounds) return [clientX, clientY];\n\n  // Clone new bounds\n  let {bounds} = draggable.props;\n  bounds = typeof bounds === 'string' ? bounds : cloneBounds(bounds);\n  let node = ReactDOM.findDOMNode(draggable);\n\n  if (typeof bounds === 'string') {\n    let boundNode;\n    if (bounds === 'parent') {\n      boundNode = node.parentNode;\n    } else {\n      boundNode = document.querySelector(bounds);\n      if (!boundNode) throw new Error('Bounds selector \"' + bounds + '\" could not find an element.');\n    }\n    let nodeStyle = window.getComputedStyle(node);\n    let boundNodeStyle = window.getComputedStyle(boundNode);\n    // Compute bounds. This is a pain with padding and offsets but this gets it exactly right.\n    bounds = {\n      left: -node.offsetLeft + int(boundNodeStyle.paddingLeft) +\n            int(nodeStyle.borderLeftWidth) + int(nodeStyle.marginLeft),\n      top: -node.offsetTop + int(boundNodeStyle.paddingTop) +\n            int(nodeStyle.borderTopWidth) + int(nodeStyle.marginTop),\n      right: innerWidth(boundNode) - outerWidth(node) - node.offsetLeft,\n      bottom: innerHeight(boundNode) - outerHeight(node) - node.offsetTop\n    };\n  }\n\n  // Keep x and y below right and bottom limits...\n  if (isNum(bounds.right)) clientX = Math.min(clientX, bounds.right);\n  if (isNum(bounds.bottom)) clientY = Math.min(clientY, bounds.bottom);\n\n  // But above left and top limits.\n  if (isNum(bounds.left)) clientX = Math.max(clientX, bounds.left);\n  if (isNum(bounds.top)) clientY = Math.max(clientY, bounds.top);\n\n  return [clientX, clientY];\n}\n\nexport function snapToGrid(grid: [number, number], pendingX: number, pendingY: number): [number, number] {\n  let x = Math.round(pendingX / grid[0]) * grid[0];\n  let y = Math.round(pendingY / grid[1]) * grid[1];\n  return [x, y];\n}\n\nexport function canDragX(draggable: React.Component): boolean {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'x';\n}\n\nexport function canDragY(draggable: React.Component): boolean {\n  return draggable.props.axis === 'both' || draggable.props.axis === 'y';\n}\n\n// Get {clientX, clientY} positions from event.\nexport function getControlPosition(e: Event): ControlPosition {\n  let position = (e.targetTouches && e.targetTouches[0]) ||\n    e.changedTouches && e.changedTouches[0] || e;\n\n  return {\n    clientX: position.clientX,\n    clientY: position.clientY\n  };\n}\n\n// A lot faster than stringify/parse\nfunction cloneBounds(bounds: Bounds): Bounds {\n  return {\n    left: bounds.left,\n    top: bounds.top,\n    right: bounds.right,\n    bottom: bounds.bottom\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/positionFns.es6","// @flow\nimport {default as React, PropTypes} from 'react';\nimport {matchesSelector, createCoreEvent, addEvent, removeEvent, addUserSelectStyles,\n        removeUserSelectStyles, styleHacks} from './utils/domFns';\nimport {getControlPosition, snapToGrid} from './utils/positionFns';\nimport {dontSetMe} from './utils/shims';\nimport log from './utils/log';\n\n// Simple abstraction for dragging events names.\nconst eventsFor = {\n  touch: {\n    start: 'touchstart',\n    move: 'touchmove',\n    stop: 'touchend'\n  },\n  mouse: {\n    start: 'mousedown',\n    move: 'mousemove',\n    stop: 'mouseup'\n  }\n};\n\n// Default to mouse events.\nlet dragEventFor = eventsFor.mouse;\n\ntype EventHandler = (e: Event) => void;\ntype CoreState = {\n  dragging: boolean,\n  lastX: ?number,\n  lastY: ?number\n};\n\n//\n// Define <DraggableCore>.\n//\n// <DraggableCore> is for advanced usage of <Draggable>. It maintains minimal internal state so it can\n// work well with libraries that require more control over the element.\n//\n\nexport default class DraggableCore extends React.Component {\n\n  static displayName = 'DraggableCore';\n\n  static propTypes = {\n    /**\n     * `allowAnyClick` allows dragging using any mouse button.\n     * By default, we only accept the left button.\n     *\n     * Defaults to `false`.\n     */\n    allowAnyClick: PropTypes.bool,\n\n    /**\n     * `disabled`, if true, stops the <Draggable> from dragging. All handlers,\n     * with the exception of `onMouseDown`, will not fire.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return (\n     *               <Draggable disabled={true}>\n     *                   <div>I can't be dragged</div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * By default, we add 'user-select:none' attributes to the document body\n     * to prevent ugly text selection during drag. If this is causing problems\n     * for your app, set this to `false`.\n     */\n    enableUserSelectHack: PropTypes.bool,\n\n    /**\n     * `grid` specifies the x and y that dragging should snap to.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return (\n     *               <Draggable grid={[25, 25]}>\n     *                   <div>I snap to a 25 x 25 grid</div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    grid: PropTypes.arrayOf(PropTypes.number),\n\n    /**\n     * `handle` specifies a selector to be used as the handle that initiates drag.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *         return (\n     *            <Draggable handle=\".handle\">\n     *              <div>\n     *                  <div className=\"handle\">Click me to drag</div>\n     *                  <div>This is some other content</div>\n     *              </div>\n     *           </Draggable>\n     *         );\n     *       }\n     *   });\n     * ```\n     */\n    handle: PropTypes.string,\n\n    /**\n     * `cancel` specifies a selector to be used to prevent drag initialization.\n     *\n     * Example:\n     *\n     * ```jsx\n     *   let App = React.createClass({\n     *       render: function () {\n     *           return(\n     *               <Draggable cancel=\".cancel\">\n     *                   <div>\n     *                     <div className=\"cancel\">You can't drag from here</div>\n     *            <div>Dragging here works fine</div>\n     *                   </div>\n     *               </Draggable>\n     *           );\n     *       }\n     *   });\n     * ```\n     */\n    cancel: PropTypes.string,\n\n    /**\n     * Called when dragging starts.\n     * If this function returns the boolean false, dragging will be canceled.\n     *\n     * Example:\n     *\n     * ```js\n     *  function (event, ui) {}\n     * ```\n     *\n     * `event` is the Event that was triggered.\n     * `ui` is an object:\n     *\n     * ```js\n     *  {\n     *    position: {top: 0, left: 0}\n     *  }\n     * ```\n     */\n    onStart: PropTypes.func,\n\n    /**\n     * Called while dragging.\n     * If this function returns the boolean false, dragging will be canceled.\n     *\n     * Example:\n     *\n     * ```js\n     *  function (event, ui) {}\n     * ```\n     *\n     * `event` is the Event that was triggered.\n     * `ui` is an object:\n     *\n     * ```js\n     *  {\n     *    position: {top: 0, left: 0}\n     *  }\n     * ```\n     */\n    onDrag: PropTypes.func,\n\n    /**\n     * Called when dragging stops.\n     *\n     * Example:\n     *\n     * ```js\n     *  function (event, ui) {}\n     * ```\n     *\n     * `event` is the Event that was triggered.\n     * `ui` is an object:\n     *\n     * ```js\n     *  {\n     *    position: {top: 0, left: 0}\n     *  }\n     * ```\n     */\n    onStop: PropTypes.func,\n\n    /**\n     * A workaround option which can be passed if onMouseDown needs to be accessed,\n     * since it'll always be blocked (due to that there's internal use of onMouseDown)\n     */\n    onMouseDown: PropTypes.func,\n\n    /**\n     * These properties should be defined on the child, not here.\n     */\n    className: dontSetMe,\n    style: dontSetMe,\n    transform: dontSetMe\n  };\n\n  static defaultProps = {\n    allowAnyClick: false, // by default only accept left click\n    cancel: null,\n    disabled: false,\n    enableUserSelectHack: true,\n    handle: null,\n    grid: null,\n    transform: null,\n    onStart: function(){},\n    onDrag: function(){},\n    onStop: function(){},\n    onMouseDown: function(){}\n  };\n\n  state: CoreState = {\n    dragging: false,\n    // Used while dragging to determine deltas.\n    lastX: null, lastY: null\n  };\n\n  componentWillUnmount() {\n    // Remove any leftover event handlers. Remove both touch and mouse handlers in case\n    // some browser quirk caused a touch event to fire during a mouse move, or vice versa.\n    removeEvent(document, eventsFor.mouse.move, this.handleDrag);\n    removeEvent(document, eventsFor.touch.move, this.handleDrag);\n    removeEvent(document, eventsFor.mouse.stop, this.handleDragStop);\n    removeEvent(document, eventsFor.touch.stop, this.handleDragStop);\n    removeEvent(document, 'scroll', this.handleScroll);\n    if (this.props.enableUserSelectHack) removeUserSelectStyles();\n  }\n\n  handleDragStart: EventHandler = (e) => {\n    // Make it possible to attach event handlers on top of this one.\n    this.props.onMouseDown(e);\n\n    // Only accept left-clicks.\n    if (!this.props.allowAnyClick && typeof e.button === 'number' && e.button !== 0) return false;\n\n    // Short circuit if handle or cancel prop was provided and selector doesn't match.\n    if (this.props.disabled ||\n      (this.props.handle && !matchesSelector(e.target, this.props.handle)) ||\n      (this.props.cancel && matchesSelector(e.target, this.props.cancel))) {\n      return;\n    }\n\n    // Set touch identifier in component state if this is a touch event. This allows us to\n    // distinguish between individual touches on multitouch screens by identifying which\n    // touchpoint was set to this element.\n    if (e.targetTouches){\n      this.setState({touchIdentifier: e.targetTouches[0].identifier});\n    }\n\n    // Add a style to the body to disable user-select. This prevents text from\n    // being selected all over the page.\n    if (this.props.enableUserSelectHack) addUserSelectStyles();\n\n    // Get the current drag point from the event. This is used as the offset.\n    let {clientX, clientY} = getControlPosition(e);\n\n    // Create an event object with all the data parents need to make a decision here.\n    let coreEvent = createCoreEvent(this, clientX, clientY);\n\n    log('DraggableCore: handleDragStart: %j', coreEvent.position);\n\n    // Call event handler. If it returns explicit false, cancel.\n    log('calling', this.props.onStart);\n    let shouldUpdate = this.props.onStart(e, coreEvent);\n    if (shouldUpdate === false) return;\n\n\n    // Initiate dragging. Set the current x and y as offsets\n    // so we know how much we've moved during the drag. This allows us\n    // to drag elements around even if they have been moved, without issue.\n    this.setState({\n      dragging: true,\n\n      lastX: clientX,\n      lastY: clientY,\n      // Stored so we can adjust our offset if scrolled.\n      scrollX: document.body.scrollLeft,\n      scrollY: document.body.scrollTop\n    });\n\n    // Translate el on page scroll.\n    addEvent(document, 'scroll', this.handleScroll);\n    // Add events to the document directly so we catch when the user's mouse/touch moves outside of\n    // this element. We use different events depending on whether or not we have detected that this\n    // is a touch-capable device.\n    addEvent(document, dragEventFor.move, this.handleDrag);\n    addEvent(document, dragEventFor.stop, this.handleDragStop);\n  };\n\n  handleDrag: EventHandler = (e) => {\n    // Return if this is a touch event, but not the correct one for this element\n    if (e.targetTouches && (e.targetTouches[0].identifier !== this.state.touchIdentifier)) return;\n    if (this.props.disabled) return;\n    let {clientX, clientY} = getControlPosition(e);\n\n    // Snap to grid if prop has been provided\n    if (Array.isArray(this.props.grid)) {\n      let deltaX = clientX - this.state.lastX, deltaY = clientY - this.state.lastY;\n      [deltaX, deltaY] = snapToGrid(this.props.grid, deltaX, deltaY);\n      if (!deltaX && !deltaY) return; // skip useless drag\n      clientX = this.state.lastX + deltaX, clientY = this.state.lastY + deltaY;\n    }\n\n    const coreEvent = createCoreEvent(this, clientX, clientY);\n\n    log('DraggableCore: handleDrag: %j', coreEvent.position);\n\n\n    // Call event handler. If it returns explicit false, trigger end.\n    const shouldUpdate = this.props.onDrag(e, coreEvent);\n    if (shouldUpdate === false) {\n      this.handleDragStop({});\n      return;\n    }\n\n    this.setState({\n      lastX: clientX,\n      lastY: clientY\n    });\n  };\n\n  handleDragStop: EventHandler = (e) => {\n    if (!this.state.dragging) return;\n\n    // Short circuit if this is not the correct touch event. `changedTouches` contains all\n    // touch points that have been removed from the surface.\n    if (e.changedTouches && (e.changedTouches[0].identifier !== this.state.touchIdentifier)) return;\n\n    // Remove user-select hack\n    if (this.props.enableUserSelectHack) removeUserSelectStyles();\n\n    let {clientX, clientY} = getControlPosition(e);\n    const coreEvent = createCoreEvent(this, clientX, clientY);\n\n    log('DraggableCore: handleDragStop: %j', coreEvent.position);\n\n    // Reset the el.\n    this.setState({\n      dragging: false,\n      lastX: null,\n      lastY: null\n    });\n\n    // Call event handler\n    this.props.onStop(e, coreEvent);\n\n    // Remove event handlers\n    log('DraggableCore: Removing handlers');\n    removeEvent(document, 'scroll', this.handleScroll);\n    removeEvent(document, dragEventFor.move, this.handleDrag);\n    removeEvent(document, dragEventFor.stop, this.handleDragStop);\n  };\n\n  // When the user scrolls, adjust internal state so the draggable moves along the page properly.\n  // This only fires when a drag is active.\n  handleScroll: EventHandler = (e) => {\n    const s = this.state, x = document.body.scrollLeft, y = document.body.scrollTop;\n\n    // Create the usual event, but make the scroll offset our deltas.\n    let coreEvent = createCoreEvent(this);\n    coreEvent.position.deltaX = x - s.scrollX;\n    coreEvent.position.deltaY = y - s.scrollY;\n\n    this.setState({\n      lastX: s.lastX + coreEvent.position.deltaX,\n      lastY: s.lastY + coreEvent.position.deltaY,\n      scrollX: x,\n      scrollY: y\n    });\n\n    this.props.onDrag(e, coreEvent);\n  };\n\n  onMouseDown: EventHandler = (e) => {\n    dragEventFor = eventsFor.mouse; // on touchscreen laptops we could switch back to mouse\n\n    return this.handleDragStart(e);\n  };\n\n  onMouseUp: EventHandler = (e) => {\n    dragEventFor = eventsFor.mouse;\n\n    return this.handleDragStop(e);\n  };\n\n  // Same as onMouseDown (start drag), but now consider this a touch device.\n  onTouchStart: EventHandler = (e) => {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStart(e);\n  };\n\n  onTouchEnd: EventHandler = (e) => {\n    // We're on a touch device now, so change the event handlers\n    dragEventFor = eventsFor.touch;\n\n    return this.handleDragStop(e);\n  };\n\n  render(): React.Element {\n    // Reuse the child provided\n    // This makes it flexible to use whatever element is wanted (div, ul, etc)\n    return React.cloneElement(React.Children.only(this.props.children), {\n      style: styleHacks(this.props.children.props.style),\n\n      // Note: mouseMove handler is attached to document so it will still function\n      // when the user drags quickly and leaves the bounds of the element.\n      onMouseDown: this.onMouseDown,\n      onTouchStart: this.onTouchStart,\n      onMouseUp: this.onMouseUp,\n      onTouchEnd: this.onTouchEnd\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/DraggableCore.es6","// @flow\nexport default function log(...args: any) {\n  if (process.env.DRAGGABLE_DEBUG) console.log(...args);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./lib/utils/log.es6"]}